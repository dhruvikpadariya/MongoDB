///////////Lab-4 Using Regex Expression /////////

/////Part-A

1.Find employees whose name start with E.
-->db.Employee.find({ ENAME: { $regex: "^E" } })

2.Find employees whose name ends with n.
-->db.Employee.find({ ENAME: { $regex: "n$" } })

3.Find employees whose name starts with S or M in your collection.
-->db.Employee.find({ ENAME: { $regex: "^[SM]" } })

4.Find employees where city starts with A to M in your collection.
-->db.Employee.find({ CITY: { $regex: "^[A-M]" } })

5.Find employees where city name ends in ‘ney’.
-->db.Employee.find({ CITY: { $regex: "ney$" } })

6.Display employee info whose name contains n. (Both uppercase(N) and lowercase(n))
-->db.Employee.find({ ENAME: { $regex: "n", $options: "i" } })

7.Display employee info whose name starts with E and having 5 characters.
-->db.Employee.find({ ENAME: { $regex: "^E.{4}$" } })

8.Display employee whose name start with S and ends in a.
-->db.Employee.find({ ENAME: { $regex: "^S.*a$" } })

9.Display EID, ENAME, CITY and SALARY whose name starts with ‘Phi’.
-->db.Employee.find({ ENAME: { $regex: "^Phi" } },{ EID: 1, ENAME: 1, CITY: 1, SALARY: 1, _id: 0 })

10.Display ENAME, JOININGDATE and CITY whose city contains ‘dne’ as three letters in city name.
-->db.Employee.find({ CITY: { $regex: "dne" } },{ ENAME: 1, JOININGDATE: 1, CITY: 1, _id: 0 })

11.Display ENAME, JOININGDATE and CITY who does not belongs to city London or Sydney. 
-->db.Employee.find(
  { CITY: { $regex: "^(?!London$|Sydney$)" } },
  { ENAME: 1, JOININGDATE: 1, CITY: 1, _id: 0 })

-->db.Employee.find(
  { CITY: { $regex:{$not:"^(London$|Sydney$)" }} },
  { ENAME: 1, JOININGDATE: 1, CITY: 1, _id: 0 }
)

12.Find employees whose names start with 'J'.
-->db.Employee.find({ ENAME: { $regex: "^J" } })

13.Find employees whose names end with 'y'.
-->db.Employee.find({ ENAME: { $regex: "y$" } })

14.Find employees whose names contain the letter 'a'.
-->db.Employee.find({ ENAME: { $regex: "a" } })

15.Find employees whose names contain either 'a' or 'e'.
-->db.Employee.find({ ENAME: { $regex: "[ae]" } })

16.Find employees whose names start with 'J' and end with 'n'.
-->db.Employee.find({ ENAME: { $regex: "^J.*n$" } })

17.Find employees whose CITY starts with 'New'.
-->db.Employee.find({ CITY: { $regex: "^New" } })

18.Find employees whose CITY does not start with 'L'
-->db.Employee.find({ CITY: { $regex: "^(?!L)" } })
-->db.Employee.find({ CITY: { $not: {$regex:"^L" }} })

19.Find employees whose CITY contains the word 'York'.
-->db.Employee.find({ CITY: { $regex: "York" } })

20.Find employees whose names have two consecutive vowels (a, e, i, o, u).
-->db.Employee.find({ ENAME: { $regex: "[aeiou]{2}", $options: "i" } })

21.Find employees whose names have three or more letters.
-->db.Employee.find({ ENAME: { $regex: "^.{3,}$" } })

22.Find employees whose names have exactly 4 letters.
-->db.Employee.find({ ENAME: { $regex: "^.{4}$" } })

23.Find employees whose names start with either 'S' or 'M'.
-->db.Employee.find({ ENAME: { $regex: "^[SM]" } })

24.Find employees whose names contain 'il' anywhere.
-->db.Employee.find({ ENAME: { $regex: "il" } })

25.Find employees whose names do not contain 'a'.
-->db.Employee.find({ ENAME: { $regex: "^(?!.*a)" } })
-->db.Employee.find({ ENAME: { $not:{$regex: "a"} } })

26.Find employees whose names contain any digit.
-->db.Employee.find({ ENAME: { $regex: "\\d" } })

27.Find employees whose names contain exactly one vowel.
-->db.Employee.find({ ENAME: { $regex: "^[^aeiou]*[aeiou][^aeiou]*$", $options: "i" } })

28.Find employees whose names start with any uppercase letter followed by any lowercase letter.
-->db.Employee.find({ ENAME: { $regex: "^[A-Z][a-z]" } })

////Part-B

1.Display documents where sname start with K.
-->db.Students.find({ SNAME: { $regex: "^K" } })

2.Display documents where sname starts with Z or D.
-->db.Students.find({ SNAME: { $regex: "^[ZD]" } })

3.Display documents where city starts with A to R.
-->db.Students.find({ city: { $regex: "^[A-R]" } })

4.Display students’ info whose name start with P and ends with i.
-->db.Students.find({ SNAME: { $regex: "^P.*i$" } })

5.Display students’ info whose department name starts with ‘C’.
-->db.Students.find({ DEPARTMENT: { $regex: "^C" } })

6.Display name, sem, fees, and department whose city contains ‘med’ as three letters somewhere in city name.
-->db.Students.find({ city: { $regex: "med" } },{ SNAME: 1, SEM: 1, FEES: 1, DEPARTMENT: 1, _id: 0 })

7.Display name, sem, fees, and department who does not belongs to city Rajkot or Baroda. 
-->db.Students.find({ city: { $regex: "^(?!Rajkot$|Baroda$)" } },{ SNAME: 1, SEM: 1, FEES: 1, DEPARTMENT: 1, _id: 0 })

8.Find students whose names start with 'K' and are followed by any character.
-->db.Students.find({ SNAME: { $regex: "^K." } })

9.Find students whose names end with 'a'.
-->db.Students.find({ SNAME: { $regex: "a$" } })

10.Find students whose names contain 'ri'. (case-insensitive)
-->db.Students.find({ SNAME: { $regex: "ri", $options: "i" } })

/////Part-C

1.Find students whose names start with a vowel (A, E, I, O, U).
-->db.Students.find({ SNAME: { $regex: "^[AEIOUaeiou]" } })

2.Find students whose CITY ends with 'pur' or 'bad'.
-->db.Students.find({ CITY: { $regex: "(pur|bad)$" } })

3.Find students whose FEES starts with '1'.
-->db.Students.find({ FEES: { $regex: "^1" } })

4.Find students whose SNAME starts with 'K' or 'V'.
-->db.Students.find({ SNAME: { $regex: "^[KV]" } })

5.Find students whose CITY contains exactly five characters.
-->db.Students.find({ CITY: { $regex: "^.{5}$" } })

6.Find students whose names do not contain the letter 'e'.
-->db.Students.find({ SNAME: { $regex: "^(?!.*e).*$", $options: "i" } })
-->db.Students.find({ SNAME: { $not: {$regex:"e"} } })

7.Find students whose CITY starts with 'Ra' and ends with 'ot'.
-->db.Students.find({ CITY: { $regex: "^Ra.*ot$" } })

8.Find students whose names contain exactly one vowel.
-->db.Students.find({ SNAME: { $regex: "^[^aeiou]*[aeiou][^aeiou]*$", $options: "i" } })

9.Find students whose names start and end with the same letter.
-->db.Students.find({ SNAME: { $regex: "^(.).*\\1$", $options: "i" } })

10.Find students whose DEPARTMENT starts with either 'C' or 'E'.
-->db.Students.find({ DEPARTMENT: { $regex: "^[CE]" } })

11.Find students whose SNAME has exactly 5 characters.
-->db.Students.find({ SNAME: { $regex: "^.{5}$" } })

12.Find students whose GENDER is Female and CITY starts with 'A'.
-->db.Students.find({ GENDER: "Female", CITY: { $regex: "^A" } })

