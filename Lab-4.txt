//////////Lab-4////////////
/////////PART-A


1. Find employees whose name starts with E.
--> db.Employee.find({ ENAME: /^E/ })

2. Find employees whose name ends with n.
--> db.Employee.find({ ENAME: /n$/ })

3. Find employees whose name starts with S or M.
--> db.Employee.find({ ENAME: /^[SM]/ })

4. Find employees where city starts with A to M.
--> db.Employee.find({ CITY: /^[A-M]/ })

5. Find employees where city name ends in ‘ney’.
--> db.Employee.find({ CITY: /ney$/ })

6. Display employee info whose name contains n (case-insensitive).
--> db.Employee.find({ ENAME: /n/i })

7. Display employee info whose name starts with E and has 5 characters.
--> db.Employee.find({ ENAME: /^E.{4}$/ })

8. Display employees whose name starts with S and ends in a.
--> db.Employee.find({ ENAME: /^S.*a$/ })

9. Display EID, ENAME, CITY, and SALARY where name starts with ‘Phi’.
--> db.Employee.find({ ENAME: /^Phi/ }, { EID: 1, ENAME: 1, CITY: 1, SALARY: 1 })

10. Display ENAME, JOININGDATE, and CITY where city contains ‘dne’.
--> db.Employee.find({ CITY: /dne/ }, { ENAME: 1, JOININGDATE: 1, CITY: 1 })

11. Display ENAME, JOININGDATE, and CITY who do not belong to city London or Sydney.
--> db.Employee.find({ CITY: { $nin: ["London", "Sydney"] } }, { ENAME: 1, JOININGDATE: 1,CITY: 1 })

12. Find employees whose names start with 'J'.
--> db.Employee.find({ ENAME: /^J/ })

13. Find employees whose names end with 'y'.
--> db.Employee.find({ ENAME: /y$/ })

14. Find employees whose names contain the letter 'a'.
--> db.Employee.find({ ENAME: /a/ })

15. Find employees whose names contain either 'a' or 'e'.
--> db.Employee.find({ ENAME: /[ae]/ })

16. Find employees whose names start with 'J' and end with 'n'.
--> db.Employee.find({ ENAME: /^J.*n$/ })

17. Find employees whose CITY starts with 'New'.
--> db.Employee.find({ CITY: /^New/ })

18. Find employees whose CITY does not start with 'L'.
--> db.Employee.find({ CITY: { $not: /^L/ } })

19. Find employees whose CITY contains the word 'York'.
--> db.Employee.find({ CITY: /York/ })

20. Find employees whose names have two consecutive vowels.
--> db.Employee.find({ ENAME: /[aeiou]{2}/ })

21. Find employees whose names have three or more letters.
--> db.Employee.find({ ENAME: /^.{3,}$/ })

22. Find employees whose names have exactly 4 letters.
--> db.Employee.find({ ENAME: /^.{4}$/ })

23. Find employees whose names start with either 'S' or 'M'.
--> db.Employee.find({ ENAME: /^[SM]/ })

24. Find employees whose names contain 'il'.
--> db.Employee.find({ ENAME: /il/ })

25. Find employees whose names do not contain 'a'.

--> db.Employee.find({ ENAME: { $not: /a/ } })
26. Find employees whose names contain any digit.

--> db.Employee.find({ ENAME: /\d/ })
27. Find employees whose names contain exactly one vowel.

--> db.Employee.find({ ENAME: /^[^aeiou]*[aeiou][^aeiou]*$/i })

28. Find employees whose names start with any uppercase letter followed by any lowercase letter.
--> db.Employee.find({ ENAME: /^[A-Z][a-z]/ })

/////Part-B

1. Display documents where sname starts with K.
--> db.Student.find({ SNAME: /^K/ })

2. Display documents where sname starts with Z or D.
-->b.Student.find({ SNAME: /^[ZD]/ })

3. Display documents where city starts with A to R.
--> db.Student.find({ CITY: /^[A-R]/ })

4. Display students’ info whose name starts with P and ends with i.
--> db.Student.find({ SNAME: /^P.*i$/ })

5. Display students’ info whose department name starts with ‘C’.
--> db.Student.find({ DEPARTMENT: /^C/ })

6. Display name, sem, fees, and department where city contains ‘med’.
--> db.Student.find({ CITY: /med/ }, { SNAME: 1, SEM: 1, FEES: 1, DEPARTMENT: 1 })

7. Display name, sem, fees, and department who does not belong to Rajkot or Baroda.
--> db.Student.find({ CITY: { $nin: ["Rajkot", "Baroda"] } }, { SNAME: 1, SEM: 1, FEES: 1, DEPARTMENT:1 })

8. Find students whose names start with 'K' and are followed by any character.
--> db.Student.find({ SNAME: /^K./ })

9. Find students whose names end with 'a'.
--> db.Student.find({ SNAME: /a$/ })

10. Find students whose names contain 'ri'. (case-insensitive)
--> db.Student.find({ SNAME: /ri/i })

/////Part-C

1. Find students whose names start with a vowel (A, E, I, O, U).
--> db.Student.find({ SNAME: /^[AEIOU]/ })

2. Find students whose CITY ends with 'pur' or 'bad'.
--> db.Student.find({ CITY: /(pur|bad)$/ })

3. Find students whose FEES starts with '1'.
--> db.Student.find({ FEES: /^1/ })

4. Find students whose SNAME starts with 'K' or 'V'.
--> db.Student.find({ SNAME: /^[KV]/ })

5. Find students whose CITY contains exactly five characters.
--> db.Student.find({ CITY: /^.{5}$/ })

6. Find students whose names do not contain the letter 'e'.
--> db.Student.find({ SNAME: { $not: /e/ } })

7. Find students whose CITY starts with 'Ra' and ends with 'ot'.
--> db.Student.find({ CITY: /^Ra.*ot$/ })

8. Find students whose names contain exactly one vowel.
--> db.Student.find({ SNAME: /^[^aeiou]*[aeiou][^aeiou]*$/i })

9. Find students whose names start and end with the same letter.
--> db.Student.find({ SNAME: /^(.).*\1$/ })

10. Find students whose DEPARTMENT starts with either 'C' or 'E'.
--> db.Student.find({ DEPARTMENT: /^[CE]/ })

11. Find students whose SNAME has exactly 5 characters.
--> db.Student.find({ SNAME: /^.{5}$/ })

12. Find students whose GENDER is Female and CITY starts with 'A'.
--> db.Student.find({ GENDER: "Female", CITY: /^A/ })
